# ------------------------------------------------------------------
# Global settings
# ------------------------------------------------------------------

image: "adorsys/ci-build:201907"

# ------------------------------------------------------------------
# stages
# ------------------------------------------------------------------

stages:
  - "Compile"    # build jar and provide as artifact
  - "Test"       # run tests and code quality checks
  - "Package"    # dockerize jar and push to docker registry
  - "Deployment" # push to openshift registry (snapshot Deploymentment) or release registry

# ------------------------------------------------------------------
# variables
# ------------------------------------------------------------------

variables: &variables
  SONAR_HOST: "https://psd2-quality.cloud.adorsys.de"

  ###########################
  # Docker images variables #
  ###########################

  DOCKER_IMAGE_NAME_XS2A_CONNECTOR: "adorsys/xs2a-connector-examples"
  DOCKER_IMAGE_NAME_XS2A_CONNECTOR_EMBEDDED: "adorsys/xs2a-connector-embedded"

  ###########################
  # Build variables         #
  ###########################

  JAVA_TOOL_OPTIONS: "-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:MaxRAM=3G -XX:MaxRAMFraction=3"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"

  ###########################
  # Deployment variables    #
  ###########################

  DEV_NAMESPACE: adorsys-psd2-develop
  DEMO_NAMESPACE: adorsys-psd2-demo
  INTEG_NAMESPACE: adorsys-psd2-integ

# ------------------------------------------------------------------
# reusable yaml anchors
# ------------------------------------------------------------------

# Build docker images and put them to DOCKER HUB repo
.build_dockerhub_image: &build_dockerhub_image
  script:
    - docker login -u $DOCKER_HUB_LOGIN -p $DOCKER_HUB_PASS
    - docker build -t "adorsys/xs2a-connector-examples:$DOCKER_TAG" gateway-app
    - docker push "adorsys/xs2a-connector-examples:$DOCKER_TAG"
    - docker logout

.build_dockerhub_image_embedded: &build_dockerhub_image_embedded
  script:
    - docker login -u $DOCKER_HUB_LOGIN -p $DOCKER_HUB_PASS
    - docker build -t "adorsys/xs2a-connector-embedded:$DOCKER_TAG" gateway-app-embedded
    - docker push "adorsys/xs2a-connector-embedded:$DOCKER_TAG"
    - docker logout

.deploy_openshift: &deploy_openshift
  script:
    - >-
      skopeo copy
      --dest-creds=openshift:${OPENSHIFT_TOKEN}
      "docker://docker.io/adorsys/xs2a-connector-examples:${DOCKER_TAG}"
      "docker://${OPENSHIFT_REGISTRY}/${OPENSHIFT_NAMESPACE}/xs2a-connector-examples:latest"

# ------------------------------------------------------------------
# jobs
# ------------------------------------------------------------------

Compile:
  stage: "Compile"
  script:
    - cat /sys/fs/cgroup/memory/memory.limit_in_bytes
    - java -XX:+PrintFlagsFinal -version | grep -Ei "maxheapsize|maxram"
    - mvn -DskipTests -Dci.build.number=Build\:${CI_PIPELINE_ID} clean install
  artifacts:
    paths:
      - "gateway-app/target/gateway-app*jar"
      - "gateway-app-embedded/target/gateway-app*jar"
      - "ledgers-rest-client/target/ledgers-rest-client*jar"
      - "xs2a-connector/target/xs2a-connector*jar"
    name: "$CI_PROJECT_NAME-${CI_BUILD_REF_NAME#*v}"
    expire_in: "1 day"

PMD Report:
  stage: "Compile"
  script:
    - cat /sys/fs/cgroup/memory/memory.limit_in_bytes
    - java -XX:+PrintFlagsFinal -version | grep -Ei "maxheapsize|maxram"
    - mvn -Dmaven.test.skip=true package pmd:pmd
  artifacts:
    paths:
      - "qa/pmd/pmd-ruleset.xml"
      - "**/**/*/pmd.html"
      - "**/*/pmd.xml"
    name: "$CI_PROJECT_NAME-${CI_BUILD_REF_NAME#*v}-pmd"
    expire_in: "10 day"

PMD Check:
  stage: "Test"
  script:
    - cat /sys/fs/cgroup/memory/memory.limit_in_bytes
    - java -XX:+PrintFlagsFinal -version | grep -Ei "maxheapsize|maxram"
    - mvn -Dmaven.test.skip=true package pmd:check

Javadoc Check:
  stage: "Test"
  script:
    - cat /sys/fs/cgroup/memory/memory.limit_in_bytes
    - java -XX:+PrintFlagsFinal -version | grep -Ei "maxheapsize|maxram"
    - mvn -Dmaven.test.skip=true package javadoc:javadoc
  artifacts:
    paths:
      - "**/target/site/*"
    name: "$CI_PROJECT_NAME-${CI_BUILD_REF_NAME#*v}-javadoc"
    expire_in: "10 day"

Unit Tests:
  stage: "Test"
  script:
    - cat /sys/fs/cgroup/memory/memory.limit_in_bytes
    - java -XX:+PrintFlagsFinal -version | grep -Ei "maxheapsize|maxram"
    - mvn --fail-at-end clean install
  artifacts:
    paths:
      - "**/target/surefire-reports/*"
    name: "$CI_PROJECT_NAME-${CI_BUILD_REF_NAME#*v}-*"
    expire_in: "10 day"

Test Docker Image:
  stage: "Test"
  script:
    - docker build -t "adorsys/xs2a-connector-examples:test" gateway-app

###########
# develop #
###########

Sonarcube:
  stage: "Test"
  script:
    - jabba use system@1.8
    - cat /sys/fs/cgroup/memory/memory.limit_in_bytes
    - java -XX:+PrintFlagsFinal -version | grep -Ei "maxheapsize|maxram"
    - mvn --fail-at-end clean install
    - mvn sonar:sonar -Dsonar.host.url=$SONAR_HOST -Dsonar.login=${SONAR_TOKEN}
  only:
    - develop

Push to DockerHub (develop):
  stage: "Package"
  only:
    - develop
  variables:
    DOCKER_TAG: develop
  <<: *build_dockerhub_image

Deploy Openshift (develop):
  stage: "Deployment"
  only:
    - develop
  variables:
    <<: *variables
    DOCKER_TAG: develop
    OPENSHIFT_NAMESPACE: "${DEV_NAMESPACE}"
  <<: *deploy_openshift

##########
# master #
##########

Push to DockerHub (master):
  stage: "Package"
  only:
    - master
  variables:
    DOCKER_TAG: latest
  <<: *build_dockerhub_image

###########
# release #
###########

Push to DockerHub (Release):
  stage: "Package"
  only:
    - tags
  variables:
    DOCKER_TAG: $CI_COMMIT_TAG
  <<: *build_dockerhub_image

Push to DockerHub (Embedded Release):
  stage: "Package"
  only:
    - tags
  variables:
    DOCKER_TAG: $CI_COMMIT_TAG
  <<: *build_dockerhub_image_embedded

###########
# nightly #
###########

Push to DockerHub (Nightly):
  stage: "Package"
  only:
    variables:
      - $NIGHTLY == "true"
  variables:
    DOCKER_TAG: nightly
  <<: *build_dockerhub_image

Deploy Openshift (Nightly):
  stage: "Deployment"
  only:
    variables:
      - $NIGHTLY == "true"
  variables:
    <<: *variables
    DOCKER_TAG: nightly
    OPENSHIFT_NAMESPACE: "${INTEG_NAMESPACE}"
  <<: *deploy_openshift
