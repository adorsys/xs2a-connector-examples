---
# yamllint disable rule:line-length
# ------------------------------------------------------------------
# Global settings
# ------------------------------------------------------------------

image: "adorsys/ci-build:latest"

# ------------------------------------------------------------------
# stages
# ------------------------------------------------------------------

stages:
  - "Lint"
  - "Compile"    # build jar and provide as artifact
  - "Test"       # run tests and code quality checks
  - "Package"    # dockerize jar and push to docker registry
  - "Deploy"     # push to openshift registry (snapshot Deploymentment) or release registry
  - "Release"    # release

# ------------------------------------------------------------------
# variables
# ------------------------------------------------------------------

variables: &variables
  SONAR_HOST: "https://psd2-quality.cloud.adorsys.de"

  ###########################
  # Docker images variables #
  ###########################

  DOCKER_IMAGE_NAME_XS2A_CONNECTOR: "xs2a-connector-examples"
  DOCKER_IMAGE_NAME_XS2A_CONNECTOR_EMBEDDED: "xs2a-connector-embedded"

  ###########################
  # Build variables         #
  ###########################

  JAVA_TOOL_OPTIONS: "-XX:+UnlockExperimentalVMOptions -XX:MaxRAM=3G -XX:MaxRAMFraction=3"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"

  ############################
  # Private Openshift Images #
  ############################

  OPENSHIFT_NAMESPACE_ADORSYS_XS2A_DEV: "adorsys-xs2a-dev"
  OPENSHIFT_NAMESPACE_ADORSYS_XS2A_INTEG: "adorsys-xs2a-integ"

# ------------------------------------------------------------------
# reusable yaml anchors
# ------------------------------------------------------------------

# Build docker images and put them to DOCKER HUB repo
.build_dockerhub_image: &build_dockerhub_image
  script:
    - docker login -u $DOCKER_HUB_LOGIN -p $DOCKER_HUB_PASS
    - docker build -t "adorsys/xs2a-connector-examples:$DOCKER_TAG" gateway-app
    - docker push "adorsys/xs2a-connector-examples:$DOCKER_TAG"
    - docker logout

# Build docker image xs2a-connector separately and put them to DOCKER HUB repo
.build_dockerhub_image_embedded: &build_dockerhub_image_embedded
  script:
    - docker login -u $DOCKER_HUB_LOGIN -p $DOCKER_HUB_PASS
    - docker build -t "adorsys/xs2a-connector-embedded:$DOCKER_TAG" gateway-app-embedded
    - docker push "adorsys/xs2a-connector-embedded:$DOCKER_TAG"
    - docker logout

# Build docker images and put them to DOCKER HUB repo
.build_docker_images_private: &build_docker_images_private
  script:
    - docker build -t "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_CONNECTOR}:${DOCKER_TAG}" gateway-app
    - docker build -t "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_CONNECTOR_EMBEDDED}:${DOCKER_TAG}" gateway-app-embedded

.push_dockerhub_images_private: &push_dockerhub_images_private
  script:
    - docker build -t "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_CONNECTOR}:${DOCKER_TAG}" gateway-app
    - docker build -t "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_CONNECTOR_EMBEDDED}:${DOCKER_TAG}" gateway-app-embedded
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_CONNECTOR}:${DOCKER_TAG}"
    - docker push "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_CONNECTOR_EMBEDDED}:${DOCKER_TAG}"
    - docker logout

# release java artifact privately
.release_java_private: &release_java_private
  stage: "Release"
  script:
    - jabba use $BUILD_JAVA_VERSION
    - cat /sys/fs/cgroup/memory/memory.limit_in_bytes
    - java -XX:+PrintFlagsFinal -version | grep -Ei "maxheapsize|maxram"
    - mvn -ntp --settings scripts/mvn-release-settings.xml -Pgitlab-maven -DskipTests -U deploy
  cache:
    key: "Java_${CI_COMMIT_REF_SLUG}"
    paths:
      - /builds/adorsys/xs2a/xs2a-conector-examples/.m2/repository



.deploy_openshift: &deploy_openshift
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - >-
      skopeo copy
      --dest-creds=openshift:${OPENSHIFT_TOKEN}
      "docker://${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_CONNECTOR}:${DOCKER_TAG}"
      "docker://${OPENSHIFT_REGISTRY}/${OPENSHIFT_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_CONNECTOR}:latest"

.deploy_openshift_embedded: &deploy_openshift_embedded
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - >-
      skopeo copy
      --dest-creds=openshift:${OPENSHIFT_TOKEN}
      "docker://${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_CONNECTOR_EMBEDDED}:${DOCKER_TAG}"
      "docker://${OPENSHIFT_REGISTRY}/${OPENSHIFT_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_CONNECTOR_EMBEDDED}:latest"

# ------------------------------------------------------------------
# jobs
# ------------------------------------------------------------------

#-------------------------------------------------------------------
# lint
#-------------------------------------------------------------------

Lint:Docker_compose:
  image: maven:3.6-jdk-11-slim
  stage: "Lint"
  except:
    - schedules
    - develop
    - master
  script:
    - apt update && apt install yamllint docker-compose make -yq
    - echo "Run Docker compose lint"
    - docker-compose -f docker-compose.yml config  -q

Lint:Ci_file:
  image: debian:stretch-slim
  stage: "Lint"
  except:
    - schedules
    - develop
    - master
  script:
    - apt-get update && apt-get install yamllint python3-pkg-resources -yq
    - echo "Run Gitlab ci file lint"
    - yamllint -d relaxed .gitlab-ci.yml

Lint:XS2A_connector_yaml_json_xml:
  image: debian:stretch-slim
  stage: "Lint"
  except:
    - schedules
    - develop
    - master
  script:
    - apt-get update && apt-get install jsonlint yamllint libxml2-utils make curl -yq && ln -s /usr/bin/jsonlint-php /usr/bin/jsonlint
    - echo "Run Xs2A core lint"
    - find ./ -type f -name "*.json" -exec jsonlint -q {} \; # lint all json
# commented cause get many small errors for yaml with spaces empty lines and etc
#    - find ./ -type f \( -name "*.yml" -o -name "*.yaml" \) -exec yamllint -d "{extends: relaxed, rules: {line-length: {max: 160}}}" {} \;
# commented cause get error Unsupported version '1.1'
#	  - find ./ -type f \( -iname "*.xml" ! -iname pom.xml \) -exec xmllint --noout {} \;

Lint:XS2A_connector_PMD_CPD_Report:
  image: maven:3.6-jdk-11-slim
  stage: "Lint"
  except:
    - schedules
    - develop
    - master
  script:
    - apt update && apt install make -yq
    - echo "Test java code for PMD and CPD"
    - mvn  --settings scripts/mvn-release-settings.xml -Dmaven.test.skip=true package pmd:check # commented cause many duplications pmd:cpd-check
  cache: {}
  artifacts:
    paths:
      - "qa/pmd/pmd-ruleset.xml"
      - "**/**/*/pmd.html"
      - "**/*/pmd.xml"
    name: "${CI_PROJECT_NAME}-${CI_BUILD_REF_NAME#*v}-pmd"
    expire_in: "10 day"

Lint:XS2A_connector_dockerfiles:
  image: docker:20.10
  stage: "Lint"
  services:
    - docker:20.10-dind
  except:
    - schedules
    - develop
    - master
  script:
    - echo "Run Xs2a connector dockerfile checks"
    - docker run --rm -i hadolint/hadolint < ./gateway-app/Dockerfile
    - docker run --rm -i hadolint/hadolint < ./gateway-app-embedded/Dockerfile

#-------------------------------------------------------------------
# Compile
#-------------------------------------------------------------------

Build:XS2A_connector_Java11:
  stage: "Compile"
  script:
    - jabba use "system@1.11"
    - cat /sys/fs/cgroup/memory/memory.limit_in_bytes
    - java -XX:+PrintFlagsFinal -version | grep -Ei "maxheapsize|maxram"
    - mvn -DskipITs -DskipTests --settings scripts/mvn-release-settings.xml -Dci.build.number=Build\:${CI_PIPELINE_ID} clean install
  artifacts:
    paths:
      - "gateway-app/target/gateway-app*jar"
      - "gateway-app-embedded/target/gateway-app*jar"
      - "ledgers-rest-client/target/ledgers-rest-client*jar"
      - "xs2a-connector/target/xs2a-connector*jar"
      - "**/target/*"
      - "**/**/target/*"
      - ".m2/repository/de/adorsys/ledgers/*/*"
    name: "$CI_PROJECT_NAME-${CI_BUILD_REF_NAME#*v}"
    expire_in: "10 day"

#-------------------
# Test
#-------------------

Test:Javadoc Java11:
  stage: "Test"
  script:
    - jabba use "system@1.11"
    - cat /sys/fs/cgroup/memory/memory.limit_in_bytes
    - java -XX:+PrintFlagsFinal -version | grep -Ei "maxheapsize|maxram"
    - mvn --settings scripts/mvn-release-settings.xml -Dmaven.test.skip=true package javadoc:javadoc
  artifacts:
    paths:
      - "**/target/site/*"
    name: "$CI_PROJECT_NAME-${CI_BUILD_REF_NAME#*v}-javadoc"
    expire_in: "10 day"

Test:UI_Tests_Java11:
  stage: "Test"
  script:
    - jabba use "system@1.11"
    - cat /sys/fs/cgroup/memory/memory.limit_in_bytes
    - java -XX:+PrintFlagsFinal -version | grep -Ei "maxheapsize|maxram"
    - mvn --settings scripts/mvn-release-settings.xml -DskipITs --fail-at-end clean install
  artifacts:
    paths:
      - "**/target/surefire-reports/*"
    name: "$CI_PROJECT_NAME-${CI_BUILD_REF_NAME#*v}-*"
    expire_in: "10 day"

Test:IT_Java11:
  stage: "Test"
  script:
    - jabba use "system@1.11"
    - cat /sys/fs/cgroup/memory/memory.limit_in_bytes
    - java -XX:+PrintFlagsFinal -version | grep -Ei "maxheapsize|maxram"
    - mvn --settings scripts/mvn-release-settings.xml -ntp failsafe:integration-test failsafe:verify
  variables:
    JAVA_TOOL_OPTIONS: "-Djavax.net.ssl.trustStorePassword=changeit -XX:MaxRAM=3G"

Test:DOCKER_test_image_build:
  stage: "Test"
  script:
    - docker build -t "adorsys/xs2a-connector-examples:test" gateway-app
    - docker build -t "adorsys/xs2a-connector-embedded:test" gateway-app-embedded

Test:Sonarcube:
  stage: "Test"
  needs: []
  except:
    - schedules
    - develop
  script:
    - jabba use "system@1.11"
    - cat /sys/fs/cgroup/memory/memory.limit_in_bytes
    - java -XX:+PrintFlagsFinal -version | grep -Ei "maxheapsize|maxram"
    - mvn --fail-at-end clean install
    - mvn --settings scripts/mvn-release-settings.xml sonar:sonar -Dsonar.host.url=$SONAR_HOST -Dsonar.login=${SONAR_TOKEN}
  only:
    - develop

###########
# develop #
###########

build_dockerhub_image_develop_private:
  stage: "Package"
  except:
    - schedules
  only:
    - develop
  variables:
    DOCKER_TAG: develop
    DOCKERHUB_REGISTRY: gitlab-registry.adorsys.de
    DOCKERHUB_NAMESPACE: "adorsys/xs2a/xs2a-connector-examples"
  <<: *push_dockerhub_images_private

##########
# deploy #
##########

Deploy Openshift (develop):
  stage: "Deploy"
  except:
    - schedules
  only:
    - develop
  variables:
    <<: *variables
    DOCKER_TAG: develop
    DOCKERHUB_REGISTRY: gitlab-registry.adorsys.de
    DOCKERHUB_NAMESPACE: "adorsys/xs2a/xs2a-connector-examples"
    OPENSHIFT_NAMESPACE: "${OPENSHIFT_NAMESPACE_ADORSYS_XS2A_DEV}"
  <<: *deploy_openshift

Deploy Openshift (develop Embedded):
  stage: "Deploy"
  only:
    - develop
  variables:
    <<: *variables
    DOCKER_TAG: develop
    DOCKERHUB_REGISTRY: gitlab-registry.adorsys.de
    DOCKERHUB_NAMESPACE: "adorsys/xs2a/xs2a-connector-examples"
    OPENSHIFT_NAMESPACE: "${OPENSHIFT_NAMESPACE_ADORSYS_XS2A_DEV}"
  <<: *deploy_openshift_embedded

##########
# master #
##########

Push to DockerHub (master):
  stage: "Package"
  only:
    - master
  variables:
    DOCKER_TAG: latest
    DOCKERHUB_REGISTRY: gitlab-registry.adorsys.de
    DOCKERHUB_NAMESPACE: "adorsys/xs2a/xs2a-connector-examples"
  <<: *push_dockerhub_images_private

###########
# release #
###########

Push to DockerHub (Release):
  stage: "Package"
  only:
    - tags
  variables:
    DOCKER_TAG: $CI_COMMIT_TAG
    DOCKERHUB_REGISTRY: gitlab-registry.adorsys.de
    DOCKERHUB_NAMESPACE: "adorsys/xs2a/xs2a-connector-examples"
  <<: *push_dockerhub_images_private

release_snapshot_artifacts_private:
  stage: "Release"
  except:
    - schedules
  cache: {}
  variables:
    BUILD_JAVA_VERSION: system@1.11
    JAVA_TOOL_OPTIONS: "-Djavax.net.ssl.trustStorePassword=changeit -XX:MaxRAM=3G"
  only:
    - develop
  <<: *release_java_private

release_artifacts_private:
  stage: "Release"
  except:
    - schedules
  cache: {}
  variables:
    BUILD_JAVA_VERSION: system@1.11
    JAVA_TOOL_OPTIONS: "-Djavax.net.ssl.trustStorePassword=changeit -XX:MaxRAM=3G"
  only:
    - tags
  <<: *release_java_private

###########
# nightly #
###########

Deploy Openshift (Nightly):
  stage: "Deploy"
  only:
    variables:
      - $NIGHTLY == "true"
  variables:
    <<: *variables
    DOCKER_TAG: develop
    DOCKERHUB_REGISTRY: gitlab-registry.adorsys.de
    DOCKERHUB_NAMESPACE: "adorsys/xs2a/xs2a-connector-examples"
    OPENSHIFT_NAMESPACE: "${OPENSHIFT_NAMESPACE_ADORSYS_XS2A_DEV}"
  <<: *deploy_openshift



